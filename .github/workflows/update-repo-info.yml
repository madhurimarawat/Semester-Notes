# ================================================================
#  GitHub Actions Workflow: Update Repo Age Badge
# ================================================================
#  🔹 This workflow updates the repository age badge in the README.md file.
#  
#  ✅ Runs **once a month (1st day, 00:00 UTC)** to reduce API stress.
#  ✅ Can be manually triggered from the GitHub Actions UI.
#  
#  📌 Steps:
#  1️⃣ Fetches the repository creation date.
#  2️⃣ Calculates the repository age (Years, Months).
#  3️⃣ Ensures a **default repo age** (`2Y 4M`) if workflow fails.
#  4️⃣ Updates the repo age badge in the README.md.
#  5️⃣ Commits and pushes the updated README.md file back to the repository.
#  
#  🚀 No personal access token (PAT) required! Uses `GITHUB_TOKEN`.
# ================================================================

name: Update Repo Age

on:
  schedule:
    - cron: "0 0 1 * *"  # ✅ Runs on the 1st day of every month at 00:00 UTC
  workflow_dispatch:       # ✅ Allows manual trigger

jobs:
  update-badge:
    runs-on: ubuntu-latest
    permissions: write-all  # ✅ Allows GitHub Actions to push changes

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # ✅ Uses GitHub's built-in token

      - name: Get Repo Creation Date
        id: repo_info
        run: |
          # ✅ Set hardcoded creation date
          CREATION_DATE="2022-10-03"
          echo "CREATION_DATE=$CREATION_DATE" >> $GITHUB_ENV

      - name: Calculate Repository Age
        id: calculate_age
        run: |
          START_DATE=$(date -d "$CREATION_DATE" +%s 2>/dev/null || echo "0")
          CURRENT_DATE=$(date +%s)

          if [ "$START_DATE" = "0" ]; then
            REPO_AGE="2Y 4M"  # ✅ Set default age if calculation fails
          else
            AGE_DAYS=$(( (CURRENT_DATE - START_DATE) / 86400 ))
            AGE_YEARS=$(( AGE_DAYS / 365 ))
            AGE_MONTHS=$(( (AGE_DAYS % 365) / 30 ))
            REPO_AGE="${AGE_YEARS}Y ${AGE_MONTHS}M"
          fi

          echo "REPO_AGE=$REPO_AGE" >> $GITHUB_ENV

      - name: Update README.md with New Badge
        run: |
          # ✅ Keep original purple color for the badge
          AGE_BADGE_COLOR="%239B59B6"

          # ✅ Generate Badge URL
          AGE_BADGE_URL="https://img.shields.io/badge/Repo%20Age-${REPO_AGE}-$AGE_BADGE_COLOR?style=for-the-badge&logo=github"

          # ✅ Replace Badge in README
          sed -i 's|https://img.shields.io/badge/Repo%20Age-[^?]*|'"$AGE_BADGE_URL"'|' README.md

      - name: Commit & Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # ✅ Uses GitHub's built-in token
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

          git add README.md
          git commit -m "Updated repository age badge (monthly)" || exit 0
          git push origin main
